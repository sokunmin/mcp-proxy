# Stage 1: Build for Node.js and npm
FROM ghcr.io/astral-sh/uv:python3.12-alpine AS builder

# Install nodejs and npm
RUN apk add --no-cache nodejs npm

# Find the paths of the executables
RUN which uv
RUN which node
RUN which uvx

# Stage 2: Create the final, smaller image
FROM python:3.12-alpine

# Set the working directory
WORKDIR /app

# Copy executables and their dependencies from the builder stage
COPY --from=builder /usr/bin/npx /usr/bin/
COPY --from=builder /usr/local/bin/uv /usr/bin/
COPY --from=builder /usr/bin/node /usr/bin/
COPY --from=builder /usr/local/bin/uvx /usr/bin/
COPY --from=builder /usr/lib/node_modules /usr/lib/node_modules

# Copy requirements and install Python dependencies system-wide
COPY requirements.txt servers.json ./
RUN uv pip install --system --no-cache-dir -r requirements.txt

# Copy the rest of the application code
COPY . .

# Expose the port the app runs on
EXPOSE 8000

# Define the command to run the app
CMD ["python", "mcp_proxy.py", "sse", "--host", "0.0.0.0", "--port", "8000"]
